//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.6

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "user_details")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub editor_type: String,
    pub editor_id: Option<Uuid>,
    #[sea_orm(unique)]
    pub user_id: Uuid,
    pub identity_no: String,
    pub province_id: Option<Uuid>,
    pub city_id: Option<Uuid>,
    pub district_id: Option<Uuid>,
    pub address: String,
    pub born_on: Option<Date>,
    pub emotional: String,
    pub graduated_from: String,
    pub company_name: String,
    pub staff_title: String,
    pub introduction: String,
    pub honor: String,
    pub expertises: String,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
